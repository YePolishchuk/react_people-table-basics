{"version":3,"sources":["App.tsx","components/Loader/Loader.tsx","api.ts","components/EmptyPeopleList/EmptyPeopleList.tsx","components/ErrorMessage/ErrorMessage.tsx","components/PersonLink/PersonLink.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["App","isActiveButton","isActive","cn","className","role","to","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","EmptyPeopleList","ErrorMessage","PersonLink","person","slug","sex","name","PeopleList","people","useParams","map","mother","find","pers","motherName","father","fatherName","born","died","PeoplePage","useState","setPeople","loader","setLoader","error","setError","useEffect","peopleList","peopleWithParents","catch","finally","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.75351ec1.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const App = () => {\n  const isActiveButton = ({ isActive }: { isActive: boolean }) => (\n    cn('navbar-item', { 'has-background-grey-lighter': isActive })\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={isActiveButton} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={isActiveButton}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const EmptyPeopleList = () => {\n  return (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  );\n};\n","export const ErrorMessage = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person | null;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person?.slug}`}\n      className={cn({ 'has-text-danger': person?.sex === 'f' })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people.find(pers => (\n            pers.name === person.motherName\n          ));\n\n          const father = people.find(pers => (\n            pers.name === person.fatherName\n          ));\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn({ 'has-background-warning': person.slug === slug })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  mother\n                    ? (<PersonLink person={mother} />)\n                    : (person.motherName || '-')\n                }\n              </td>\n              <td>\n                {\n                  father\n                    ? (<PersonLink person={father} />)\n                    : (person.fatherName || '-')\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { EmptyPeopleList } from '../EmptyPeopleList/EmptyPeopleList';\nimport { ErrorMessage } from '../ErrorMessage/ErrorMessage';\nimport { PeopleList } from '../PeopleList/PeopleList';\n\nconst peopleWithParents = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(pers => pers.name === person.motherName);\n    const father = people.find(pers => pers.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n    getPeople()\n      .then((peopleList) => setPeople(peopleWithParents(peopleList)))\n      .catch(() => setError(true))\n      .finally(() => setLoader(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loader && <Loader />}\n          {error && (\n            <ErrorMessage />\n          )}\n          {(!loader && people.length === 0) && (\n            <EmptyPeopleList />\n          )}\n          {(people.length !== 0 && !loader && !error) && (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}